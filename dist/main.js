/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _plugin_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../plugin.json */ \"./plugin.json\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\n\nvar _ace$require = ace.require('ace/worker/worker_client'),\n  WorkerClient = _ace$require.WorkerClient;\nvar net = ace.require('ace/lib/net');\nvar config = ace.require('ace/config');\nvar appSettings = acode.require('settings');\nvar _commands = /*#__PURE__*/new WeakMap();\nvar AcodePlugin = /*#__PURE__*/function () {\n  function AcodePlugin() {\n    _classCallCheck(this, AcodePlugin);\n    _classPrivateFieldInitSpec(this, _commands, {\n      get: _get_commands,\n      set: void 0\n    });\n    _defineProperty(this, \"baseUrl\", '');\n    this.startWorker = this.startWorker.bind(this);\n  }\n  _createClass(AcodePlugin, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _editorManager, editor;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _editorManager = editorManager, editor = _editorManager.editor;\n                editor.renderer.setMargin(0, 0, 0, 0);\n                editor.on('changeMode', this.startWorker);\n                this.startWorker();\n                _classPrivateFieldGet(this, _commands).forEach(function (command) {\n                  editor.commands.addCommand(command);\n                });\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n  }, {\n    key: \"destroy\",\n    value: function () {\n      var _destroy = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _editorManager2, editor;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _editorManager2 = editorManager, editor = _editorManager2.editor;\n                _classPrivateFieldGet(this, _commands).forEach(function (command) {\n                  editor.commands.removeCommand(command);\n                });\n                editor.off('changeMode', this.startWorker);\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function destroy() {\n        return _destroy.apply(this, arguments);\n      }\n      return destroy;\n    }()\n  }, {\n    key: \"startWorker\",\n    value: function () {\n      var _startWorker = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _editorManager3, editor, session;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _editorManager3 = editorManager, editor = _editorManager3.editor;\n                session = editor.session;\n                _context3.next = 5;\n                return this.initWorker(session, session.$mode);\n              case 5:\n                _context3.next = 10;\n                break;\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.error(_context3.t0);\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 7]]);\n      }));\n      function startWorker() {\n        return _startWorker.apply(this, arguments);\n      }\n      return startWorker;\n    }()\n  }, {\n    key: \"initWorker\",\n    value: function () {\n      var _initWorker = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(session, mode) {\n        var modeName;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof mode === 'string') {\n                  mode = config.$modes[mode];\n                }\n                if (mode) {\n                  _context4.next = 3;\n                  break;\n                }\n                return _context4.abrupt(\"return\");\n              case 3:\n                modeName = mode.$id.split('/').pop();\n                _context4.next = 6;\n                return this.createWorker(modeName, session, mode);\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function initWorker(_x, _x2) {\n        return _initWorker.apply(this, arguments);\n      }\n      return initWorker;\n    }()\n  }, {\n    key: \"createWorker\",\n    value: function () {\n      var _createWorker = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(modeName, session, mode) {\n        var workerScript, workerMode, script, workerClass, worker;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                if (session.$worker) {\n                  session.$worker.terminate();\n                  session.$worker = null;\n                }\n                workerScript = \"workers/worker-\".concat(modeName, \".js\");\n                workerMode = \"ace/mode/\".concat(modeName, \"_worker\");\n                script = acode.joinUrl(this.baseUrl, workerScript);\n                workerClass = AcodePlugin.getWorkerClass(modeName);\n                worker = new WorkerClient(['ace'], workerMode, workerClass, script);\n                worker.attachToDocument(session.getDocument());\n                session.$worker = worker;\n                if (!(modeName === 'xquery')) {\n                  _context5.next = 14;\n                  break;\n                }\n                worker.on(\"ok\", function (e) {\n                  session.clearAnnotations();\n                });\n                worker.on(\"markers\", function (e) {\n                  session.clearAnnotations();\n                  mode.addMarkers(e.data, session);\n                });\n                worker.on(\"highlight\", function (tokens) {\n                  mode.$tokenizer.tokens = tokens.data.tokens;\n                  mode.$tokenizer.lines = session.getDocument().getAllLines();\n                  var rows = Object.keys(mode.$tokenizer.tokens);\n                  for (var i = 0; i < rows.length; i++) {\n                    var row = parseInt(rows[i]);\n                    delete session.bgTokenizer.lines[row];\n                    delete session.bgTokenizer.states[row];\n                    session.bgTokenizer.fireUpdateEvent(row, row);\n                  }\n                });\n                return _context5.abrupt(\"return\");\n              case 14:\n                if (!(modeName === 'html' || modeName === 'xml')) {\n                  _context5.next = 19;\n                  break;\n                }\n                if (mode.fragmentContext) {\n                  worker.call(\"setOptions\", [{\n                    context: this.fragmentContext\n                  }]);\n                }\n                worker.on(\"error\", function (e) {\n                  session.setAnnotations(e.data);\n                });\n                worker.on(\"terminate\", function () {\n                  session.clearAnnotations();\n                });\n                return _context5.abrupt(\"return\");\n              case 19:\n                if (mode.inlinePhp) {\n                  worker.call(\"setOptions\", [{\n                    inline: true\n                  }]);\n                }\n                if (modeName === 'javascript') {\n                  this.esversion = this.settings.esversion;\n                }\n                worker.on('annotate', function (e) {\n                  session.setAnnotations(e.data);\n                });\n                worker.on('terminate', function () {\n                  session.clearAnnotations();\n                });\n                return _context5.abrupt(\"return\", worker);\n              case 26:\n                _context5.prev = 26;\n                _context5.t0 = _context5[\"catch\"](0);\n                console.log(_context5.t0);\n                return _context5.abrupt(\"return\", null);\n              case 30:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 26]]);\n      }));\n      function createWorker(_x3, _x4, _x5) {\n        return _createWorker.apply(this, arguments);\n      }\n      return createWorker;\n    }()\n  }, {\n    key: \"loadScript\",\n    value: function () {\n      var _loadScript = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(script) {\n        var id, $script;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                id = script.hashCode();\n                if (!document.getElementById(id)) {\n                  _context6.next = 3;\n                  break;\n                }\n                return _context6.abrupt(\"return\");\n              case 3:\n                $script = document.createElement('script');\n                $script.src = script;\n                $script.id = id;\n                document.head.appendChild($script);\n                return _context6.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  $script.onload = resolve;\n                  $script.onerror = reject;\n                }));\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n      function loadScript(_x6) {\n        return _loadScript.apply(this, arguments);\n      }\n      return loadScript;\n    }()\n  }, {\n    key: \"settings\",\n    get: function get() {\n      var settings = appSettings.value[_plugin_json__WEBPACK_IMPORTED_MODULE_0__.id];\n      if (!settings) {\n        appSettings.value[_plugin_json__WEBPACK_IMPORTED_MODULE_0__.id] = {\n          esversion: 11\n        };\n        appSettings.update(false);\n      }\n      return appSettings.value[_plugin_json__WEBPACK_IMPORTED_MODULE_0__.id];\n    }\n  }, {\n    key: \"settingsList\",\n    get: function get() {\n      return [{\n        key: 'esversion',\n        text: 'JShint esversion',\n        value: this.settings.esversion,\n        prompt: 'Enter esversion',\n        promptType: 'number'\n      }];\n    }\n  }, {\n    key: \"settingsCallback\",\n    value: function settingsCallback(key, value) {\n      if (key === 'esversion') {\n        this.esversion = value || 11;\n        this.settings.esversion = value;\n        appSettings.update();\n      }\n    }\n  }, {\n    key: \"esversion\",\n    get: function get() {\n      var _this$settings;\n      return ((_this$settings = this.settings) === null || _this$settings === void 0 ? void 0 : _this$settings.esversion) || 8;\n    },\n    set: function set(value) {\n      var _editorManager$sessio;\n      var worker = (_editorManager$sessio = editorManager.session) === null || _editorManager$sessio === void 0 ? void 0 : _editorManager$sessio.$worker;\n      if (!worker) return;\n      worker.call(\"setOptions\", [{\n        esversion: value\n      }]);\n    }\n  }], [{\n    key: \"workerBlob\",\n    value: function workerBlob(workerUrl) {\n      var script = \"importScripts('\" + net.qualifyURL(workerUrl) + \"');\";\n      try {\n        return new Blob([script], {\n          \"type\": \"application/javascript\"\n        });\n      } catch (e) {\n        // Backwards-compatibility\n        var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder;\n        var blobBuilder = new BlobBuilder();\n        blobBuilder.append(script);\n        return blobBuilder.getBlob(\"application/javascript\");\n      }\n    }\n  }, {\n    key: \"getWorkerClass\",\n    value: function getWorkerClass(mode) {\n      switch (mode) {\n        case 'javascript':\n          return 'JavaScriptWorker';\n        case 'json':\n          return 'JsonWorker';\n        case 'xquery':\n          return 'XQueryWorker';\n        case 'php':\n          return 'PhpWorker';\n        case 'yaml':\n          return 'YamlWorker';\n        default:\n          return 'Worker';\n      }\n    }\n  }]);\n  return AcodePlugin;\n}();\nfunction _get_commands() {\n  var _this = this;\n  return [{\n    name: 'setJshintEsversion',\n    description: \"Set JShint esversion.\",\n    exec: function () {\n      var _exec = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var defaultValue, esversion;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                defaultValue = _this.settings.esversion;\n                _context7.next = 3;\n                return acode.prompt('Enter esversion', defaultValue, 'number', {\n                  required: true\n                });\n              case 3:\n                esversion = _context7.sent;\n                _this.settings.esversion = esversion;\n                appSettings.update();\n                _this.esversion = esversion;\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n      function exec() {\n        return _exec.apply(this, arguments);\n      }\n      return exec;\n    }()\n  }];\n}\nif (window.acode) {\n  var acodePlugin = new AcodePlugin();\n  acode.setPluginInit(_plugin_json__WEBPACK_IMPORTED_MODULE_0__.id, function (baseUrl, $page, _ref) {\n    var cacheFileUrl = _ref.cacheFileUrl,\n      cacheFile = _ref.cacheFile;\n    if (!baseUrl.endsWith('/')) {\n      baseUrl += '/';\n    }\n    acodePlugin.baseUrl = baseUrl;\n    acodePlugin.init($page, cacheFile, cacheFileUrl);\n  }, {\n    list: acodePlugin.settingsList,\n    cb: acodePlugin.settingsCallback.bind(acodePlugin)\n  });\n  acode.setPluginUnmount(_plugin_json__WEBPACK_IMPORTED_MODULE_0__.id, function () {\n    acodePlugin.destroy();\n  });\n}\n\n//# sourceURL=webpack://acode-plugin/./src/main.js?");

/***/ }),

/***/ "./plugin.json":
/*!*********************!*\
  !*** ./plugin.json ***!
  \*********************/
/***/ (function(module) {

eval("module.exports = JSON.parse('{\"id\":\"acode.plugin.lint\",\"name\":\"Lint\",\"main\":\"dist/main.js\",\"type\":\"free\",\"version\":\"1.0.3\",\"readme\":\"readme.md\",\"icon\":\"icon.png\",\"files\":[\"workers/worker-base.js\",\"workers/worker-coffee.js\",\"workers/worker-css.js\",\"workers/worker-html.js\",\"workers/worker-javascript.js\",\"workers/worker-json.js\",\"workers/worker-lua.js\",\"workers/worker-php.js\",\"workers/worker-xml.js\",\"workers/worker-xquery.js\",\"workers/worker-yaml.js\"],\"author\":{\"name\":\"Ajit Kumar\",\"email\":\"me@ajitkumar.dev\",\"github\":\"https://github.com/deadlyjack\"}}');\n\n//# sourceURL=webpack://acode-plugin/./plugin.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.js");
/******/ 	
/******/ })()
;